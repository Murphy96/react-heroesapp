{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","Components/login/LoginScreen.js","data/heroes.js","Components/heroes/HeroCard.js","Components/heroes/HeroLists.js","selectors/getHeroByPublisher.js","Components/dc/DcScreen.js","Components/heroes/HeroScreen.js","selectors/getHeroById.js","Components/marvel/MarvelScreen.js","Components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroByName.js","Components/ui/Navbar.js","routers/DashboardRoutes.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","styles","maxWidth","src","alt","HeroLists","publisher","useMemo","includes","Error","filter","hero","getHeroByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","getHeroById","console","log","length","push","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f829c408.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext()","\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n// const state = {\r\n//     name: 'Fernando',\r\n//     logged: true,\r\n// }\r\nexport const authReducer = ( state = {}, action ) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true,\r\n            }            \r\n        case types.logout:\r\n            return {\r\n                logged: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname );\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" />)\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n    const { dispatch } = useContext( AuthContext )\r\n    \r\n    const handleLogin = () => {\r\n        \r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        dispatch({\r\n            type: types.login,\r\n            payload:{\r\n                name:'Alejandro',\r\n            }\r\n        });\r\n        history.replace( lastPath );\r\n    };\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>LoginScreen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" styles={ { maxWidth: 540 } }>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${ id }.jpg`} className=\"card-img\" alt={ superhero } />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\">{ alter_ego }</p>\r\n                        {\r\n                            ( alter_ego !== characters )\r\n                                && <p className=\"card-text\">{ characters }</p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{ first_appearance }</small>\r\n                        </p>\r\n                        <Link to={`./hero/${ id }`}>\r\n                            Mas ...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroByPublisher } from '../../selectors/getHeroByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroLists = ({ publisher }) => {\r\n\r\n    \r\n    const heroes = useMemo(() => getHeroByPublisher( publisher ), [publisher]);\r\n    \r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard \r\n                        key={hero.id}\r\n                        { ...hero }\r\n                    >\r\n                    </HeroCard>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroByPublisher = ( publisher ) => {\r\n    const validPublisher = ['DC Comics', 'Marvel Comics'];\r\n\r\n\r\n    if( ! validPublisher.includes( publisher ) ){\r\n        throw new Error(`Publisher ${ publisher } no es correcto`);\r\n    }\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n}\r\n","import React from 'react'\r\nimport { HeroLists } from '../heroes/HeroLists'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n          \r\n          <h1>DcScreen</h1>\r\n          <HeroLists publisher={'DC Comics'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();\r\n    const hero = useMemo(() => getHeroById( heroeId ), [ heroeId ]);\r\n    if( !hero ){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if( history.length <= 2){\r\n            history.push('/');\r\n        }else{\r\n            history.goBack()\r\n        }\r\n    }\r\n    const {\r\n        id,\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n    \r\n    console.log('sddsds');\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            \r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={`../assets/heroes/${ id }.jpg`}\r\n                    alt={ hero }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{ superhero }</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b> Alter ego:</b>{ alter_ego }</li>\r\n                    <li className=\"list-group-item\"><b> Publisher:</b>{ publisher }</li>\r\n                    <li className=\"list-group-item\"><b> First appearance:</b>{ first_appearance }</li>\r\n                </ul>\r\n\r\n                <h5> Characters</h5>\r\n                <p> { characters } </p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                    >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = ( id ) => {\r\n    \r\n    return heroes.find( hero => hero.id === id );\r\n}\r\n","import React from 'react'\r\nimport { HeroLists } from '../heroes/HeroLists'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel</h1>\r\n            <HeroLists publisher={ 'Marvel Comics' }/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router-dom'; \r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroByName } from '../../selectors/getHeroByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n    \r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse( location.search )\r\n    const [ formValues, handleInputChange] = useForm({\r\n        searchText: q,\r\n    });\r\n    const { searchText } = formValues;\r\n\r\n    \r\n    const heroesFiltered = useMemo(() => getHeroByName( q ), [ q ]);\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${ searchText }`)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr />\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit={ handleSearch } >\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Find you hero\"\r\n                            className=\"form-control\"\r\n                            autoComplete=\"off\"\r\n                            name=\"searchText\"\r\n                            value={searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search ...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7 \">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                        && \r\n                        <div className=\"alert alert-info\">\r\n                            Search\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                        && \r\n                        <div className=\"alert alert-danger\">\r\n                            There is not a hero with { q }\r\n                        </div>\r\n                    }\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard \r\n                                key={ hero.id }\r\n                                { ...hero }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    };\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        })\r\n    };\r\n    return [values, handleInputChange, reset ];\r\n}","import { heroes } from \"../data/heroes\"\r\n\r\n\r\nexport const getHeroByName = ( name = '' ) => {\r\n    if( name === ''){\r\n        return [];\r\n    }\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ) )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n    const { user:{ name }, dispatch } = useContext( AuthContext ); \r\n    const history = useHistory();\r\n    \r\n    const handleLogout = () => {\r\n        history.replace('/login')\r\n        dispatch({\r\n            type: types.logout,\r\n        });\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    \r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {\r\n                            name\r\n                        }\r\n                    </span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn btn-primary\" \r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { Redirect, Switch, Route } from 'react-router-dom'\r\nimport { DcScreen } from '../Components/dc/DcScreen'\r\nimport { HeroScreen } from '../Components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../Components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../Components/search/SearchScreen'\r\nimport { Navbar } from '../Components/ui/Navbar';\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            < Navbar />\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } />\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n\r\n                </Switch>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" />)\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport { LoginScreen } from '../Components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRoute } from './PublicRoute';\r\nexport const AppRouter = () => {\r\n    const { user } = useContext( AuthContext );\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={ DashboardRoutes } \r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nconst init = () => {\r\n    return JSON.parse( localStorage.getItem('user')) || { logged: false };\r\n}\r\nexport const HeroesApp = () => {\r\n    const [ user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user',JSON.stringify( user ));\r\n    }, [ user ])\r\n    \r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}